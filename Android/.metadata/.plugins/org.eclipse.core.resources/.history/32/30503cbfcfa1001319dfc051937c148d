package com.swq.disastermonitoring;

import android.os.Bundle;
import android.os.IBinder;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.content.SharedPreferences;
import java.lang.Thread;

public class AccelerometerService extends Activity implements SensorEventListener {

	private SensorManager sensorManager;
	public double accelervalue;
	public int countNum;
	private SharedPreferences preferences;
	private String userId;

	
	@Override
	public void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.accelerometer);
		System.out.println("AccelerometerService is Created");
		accelervalue=0;
		countNum=0;
	    preferences=getSharedPreferences("PRIVATE",Activity.MODE_PRIVATE);
	    userId=preferences.getString("Serial_Number", "unknow");
		sensorManager=(SensorManager)getSystemService(Context.SENSOR_SERVICE);
		sensorManager.registerListener(this, 
				sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER),
				SensorManager.SENSOR_DELAY_UI);
	}
	
	
	@Override
	public void onDestroy()
	{
		super.onDestroy();
		sensorManager.unregisterListener(this);
		System.out.println("LocationService is Destroyed");
	}
	
	@Override
	public void onAccuracyChanged(Sensor arg0, int arg1) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onSensorChanged(SensorEvent event) {
		float[] values=event.values;
		double  a=java.lang.Math.sqrt(values[0]*values[0]+values[1]*values[1]+values[2]*values[2]);
		accelervalue+=a;
		countNum++;
		if(countNum>=1000)
		{
			sensorManager.unregisterListener(this);
			NetThread net = new NetThread(accelervalue/countNum,
					0, userId);
			new Thread(net).start();
			accelervalue=0;
			countNum=0;
			finish();
		}
	}

}
